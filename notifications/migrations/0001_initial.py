# Generated by Django 5.2.7 on 2025-10-29 16:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('alert', 'Security Alert'), ('insight', 'Analytics Insight'), ('report', 'Report'), ('system', 'System Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('delivery_method', models.CharField(choices=[('web', 'Web Dashboard'), ('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('suppressed', 'Suppressed')], default='pending', max_length=20)),
                ('metadata', models.JSONField(default=dict, help_text='Additional notification data')),
                ('related_alert_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_aggregated', models.BooleanField(default=False)),
                ('aggregation_group_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=50)),
                ('details', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled_methods', models.JSONField(default=list, help_text='List of enabled notification methods')),
                ('min_severity_web', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=10)),
                ('min_severity_email', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='high', max_length=10)),
                ('min_severity_sms', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='critical', max_length=10)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start of quiet hours (e.g., 22:00)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End of quiet hours (e.g., 08:00)', null=True)),
                ('enable_aggregation', models.BooleanField(default=True, help_text='Group similar notifications together')),
                ('aggregation_window_minutes', models.IntegerField(default=30, help_text='Time window for grouping notifications (minutes)')),
                ('max_notifications_per_hour', models.IntegerField(default=10, help_text='Maximum notifications per hour (0 = unlimited)')),
                ('notify_suspicious_objects', models.BooleanField(default=True)),
                ('notify_anomalies', models.BooleanField(default=True)),
                ('notify_high_frequency', models.BooleanField(default=True)),
                ('notify_unusual_time', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('condition_type', models.CharField(choices=[('object_class', 'Object Class Detected'), ('detection_count', 'Detection Count Threshold'), ('time_range', 'Time Range'), ('confidence', 'Confidence Threshold')], max_length=20)),
                ('condition_value', models.JSONField(help_text='Condition parameters as JSON')),
                ('action', models.CharField(choices=[('notify', 'Send Notification'), ('suppress', 'Suppress Notification'), ('escalate', 'Escalate Severity')], max_length=20)),
                ('action_parameters', models.JSONField(default=dict, help_text='Action parameters as JSON')),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0, help_text='Higher priority rules are evaluated first')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Rule',
                'verbose_name_plural': 'Notification Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PredictiveAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('trend', 'Trend Prediction'), ('anomaly_forecast', 'Anomaly Forecast'), ('risk_assessment', 'Risk Assessment')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('predicted_event', models.CharField(max_length=100)),
                ('confidence_score', models.FloatField(help_text='Prediction confidence (0-1)')),
                ('predicted_timeframe_start', models.DateTimeField()),
                ('predicted_timeframe_end', models.DateTimeField()),
                ('supporting_data', models.JSONField(default=dict)),
                ('recommendations', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('was_accurate', models.BooleanField(blank=True, help_text='Prediction accuracy (evaluated after timeframe)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictive_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predictive Alert',
                'verbose_name_plural': 'Predictive Alerts',
                'ordering': ['-confidence_score', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status', 'created_at'], name='notificatio_user_id_cd4f27_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['aggregation_group_id'], name='notificatio_aggrega_d807d6_idx'),
        ),
    ]
